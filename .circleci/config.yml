version: 2.1
commands:
  deploy:
    description: "Deployment of rules server"
    parameters:
      hostname:
        type: string
        default: "ssh.staging.openchs.org"
    steps:
      - attach_workspace:
          at: ~/artifacts

      - run:
          name: Install dependencies and deploy to server
          command: |
            sudo apt-get -y -qq update
            sudo apt-get -y -qq install make openssl python3-pip
            sudo pip3 install awscli --upgrade

      - run:
          name: Copy artifacts to server
          command: |
            scp -o StrictHostKeyChecking=no ~/artifacts/rules-server.zip ec2-user@<< parameters.hostname >>:/tmp

      - run:
          name: Deploy server
          command: |
            ssh -o StrictHostKeyChecking=no ec2-user@<< parameters.hostname >> \<< EOF
            sudo rm -rf /opt/rules-server
            sudo unzip /tmp/rules-server.zip -d /opt/
            cd /opt/rules-server
            pm2 stop rules-server
            pm2 start app.js --name rules-server
            sudo rm -rf /tmp/rules-server.zip
            EOF

jobs:
  app_test:
    docker:
      - image: circleci/node:10.15.1

    working_directory: ~/rules-server

    steps:
      - checkout

      - restore_cache:
          key: dependency-cache-{{ checksum "package.json" }}

      - run: yarn install

      - save_cache:
          key: dependency-cache-{{ checksum "package.json" }}
          paths:
            - ./node_modules
      # no tests right now commenting this
      #- run: yarn test

  app_build:
    docker:
      - image: circleci/node:10.15.1

    working_directory: ~/rules-server

    steps:
      - checkout

      - restore_cache:
          key: dependency-cache-{{ checksum "package.json" }}

      - run: yarn install

      - save_cache:
          key: dependency-cache-{{ checksum "package.json" }}
          paths:
            - ./node_modules

      - run: zip -r ~/rules-server.zip ../rules-server

      - run: mkdir -p ~/artifacts

      - run: echo $CIRCLE_BUILD_NUM > ~/artifacts/build_version

      - run: cp ~/rules-server.zip ~/artifacts/

      - persist_to_workspace:
          root: ~/artifacts
          paths:
            - build_version
            - rules-server.zip

      - store_artifacts:
          path: ~/artifacts

  STAGING_deploy:
    docker:
      - image: circleci/node:10.15.1
    working_directory: ~/
    steps:
      - deploy:
          hostname: "ssh.staging.openchs.org"

  PRODUCTION_deploy:
    docker:
      - image: circleci/node:10.15.1
    working_directory: ~/
    steps:
      - deploy:
          hostname: "ssh.server.openchs.org"

workflows:
  version: 2
  test_and_build:
    jobs:
      - app_test
      - app_build:
          requires:
            - app_test
      - STAGING_deploy:
          filters:
            branches:
              only: master
          requires:
            - app_build
      - PRODUCTION_approve:
          type: approval
          requires:
            - app_build
      - PRODUCTION_deploy:
          requires:
            - PRODUCTION_approve

#notify:
#  webhooks:
#    - url: https://webhooks.gitter.im/e/0fdffde721194986f2a0
